{"version":3,"sources":["assets/team.png","components/TeamsList.js","assets/emblem.jpg","components/LeaguesList.js","components/Calendar.js","components/LeaguesDate.js","components/TeamDate.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minHeight","minWidth","color","media","height","padding","search","marginBottom","icons","paddingLeft","cardInfo","display","backgroundColor","paddingBottom","paddingTop","cardInfoBottom","cardText","backButton","opacity","borderRadius","marginRight","link","textDecoration","TeamsList","classes","useState","team","setTeam","value","setValue","number","useParams","history","useHistory","useLocation","pathname","useEffect","fetch","method","headers","Headers","process","then","res","json","teams","catch","err","console","log","params","URLSearchParams","set","delete","push","toString","searchValue","get","teamFilter","filter","name","toLowerCase","includes","Container","fixed","className","to","Button","variant","FormControl","Input","id","placeholder","onChange","event","target","Grid","container","spacing","map","i","item","xs","sm","md","Card","CardMedia","image","crestUrl","teamImage","title","CardContent","Typography","component","linkCalendar","cardTextBottom","area","founded","margin","border","borderColor","borderWidth","linkTeam","width","details","flexDirection","leagues","marginTop","filterPanel","LeaguesList","league","setLeague","year","leagueName","setFilter","responseLeague","yearPar","searchPar","competitions","yearFilter","filteredLeague","currentSeason","startDate","Select","MenuItem","index","ensignUrl","emblem","tableTeams","maxWidth","select","pickerContainer","marginLeft","pickerBlock","tableHead","tableHeadText","Calendar","data","tableHeader","type","stateDate","Date","getFullYear","valueTable","dataTable","setDataTable","endDate","setEndDate","setStartDate","season","setSeason","getParamDate","seasonPar","date","result","getMonth","getDate","getDateMatch","day","month","hour","getHours","minutes","getMinutes","filterYear","seasonFormat","utcDate","filterDate","utils","DateFnsUtils","disableToolbar","format","label","KeyboardButtonProps","InputLabel","labelId","years","renderMenuItem","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","homeTeam","awayTeam","score","fullTime","status","competition","LeaguesDate","matches","setMatches","TeamDate","teamId","teamMatches","setTeamMatches","App","AppBar","position","Toolbar","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ac13a65.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/team.5d8206d6.png\";","import React, {useEffect, useState} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport {Button, Container, Grid} from \"@material-ui/core\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport teamImage from \"../assets/team.png\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Link, useLocation, useParams, useHistory} from \"react-router-dom\";\r\nimport EventNoteIcon from \"@material-ui/icons/EventNote\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minHeight: 250,\r\n        minWidth: 280,\r\n        color: 'white'\r\n    },\r\n    media: {\r\n        height: 0,\r\n        padding: '50%',\r\n    },\r\n    search: {\r\n        marginBottom: 15,\r\n    },\r\n    icons: {\r\n        color: \"white\",\r\n        paddingLeft: 30\r\n    },\r\n    cardInfo: {\r\n        display: 'flex',\r\n        backgroundColor: '#3f51b5',\r\n        minHeight: 40,\r\n        paddingBottom: 0,\r\n        paddingTop: 10\r\n    },\r\n    cardInfoBottom: {\r\n        backgroundColor: '#3f51b5',\r\n        paddingTop: 0\r\n    },\r\n    cardText: {\r\n        minHeight: 30,\r\n        minWidth: 200\r\n    },\r\n    backButton: {\r\n        opacity: 1,\r\n        borderRadius: 50,\r\n        marginRight: 25\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n});\r\n\r\nconst TeamsList = () => {\r\n    const classes = useStyles();\r\n    const [team, setTeam] = useState([])\r\n    const [value, setValue] = useState('')\r\n    const {number} = useParams()\r\n    let history = useHistory()\r\n    const {pathname, search} = useLocation()\r\n\r\n    const responseTeam = () => {\r\n        fetch(`https://api.football-data.org/v2/competitions/${number}/teams`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'X-Auth-Token': process.env.REACT_APP_API_KEY,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => setTeam(res.teams))\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        responseTeam()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search)\r\n        if (value !== '') {\r\n            params.set('search', value)\r\n        } else {\r\n            params.delete('search')\r\n        }\r\n        history.push({\r\n            pathname,\r\n            search: params.toString()\r\n        })\r\n    }, [value])\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search);\r\n        const searchValue = params.get('search');\r\n        if (searchValue != null) {\r\n            setValue(searchValue)\r\n        }\r\n    }, [])\r\n    const teamFilter = team.filter(team => {\r\n            return team.name.toLowerCase().includes(value.toLowerCase())\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Container fixed>\r\n                <div className='sortPanel'>\r\n                <Link to={`/`} className={classes.link}> <Button variant=\"contained\" color=\"primary\" className={classes.backButton}>back</Button></Link>\r\n                    <FormControl variant=\"outlined\" className={classes.search}>\r\n                        <Input\r\n                            id=\"standard-adornment-weight\"\r\n                            placeholder='Search'\r\n                            onChange={(event => setValue(event.target.value))}\r\n                        />\r\n                    </FormControl>\r\n                </div>\r\n                <Grid container spacing={6}>\r\n                    {teamFilter.map(i =>\r\n                        <Grid item key={i.id} xs={9} sm={6} md={3}>\r\n                            <Card className={classes.root}>\r\n                                <CardMedia className={classes.media}\r\n                                           image={(i.crestUrl) ? i.crestUrl : teamImage}\r\n                                           title='Team'/>\r\n                                <CardContent className={classes.cardInfo}>\r\n                                    <Typography variant=\"h7\" component=\"h4\" className={classes.cardText}>\r\n                                        {i.name}\r\n                                    </Typography>\r\n                                    <Link to={{pathname: `/league/team/${i.id}/calendar`, id: i.id, number: number}}\r\n                                          className={classes.linkCalendar}>\r\n                                        <EventNoteIcon className={classes.icons}/></Link>\r\n                                </CardContent>\r\n                                <CardContent className={classes.cardInfoBottom}>\r\n                                    <Typography variant=\"h7\" component=\"h5\" className={classes.cardTextBottom}>\r\n                                        {i.area.name}\r\n                                    </Typography>\r\n                                    <Typography variant=\"h7\" component=\"h5\" className={classes.cardTextBottom}>\r\n                                        Founded in {i.founded}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </Card>\r\n                        </Grid>\r\n                    )}\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default TeamsList;\r\n","export default __webpack_public_path__ + \"static/media/emblem.400da732.jpg\";","import React, {useEffect, useState} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Container, Grid} from \"@material-ui/core\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport emblem from \"../assets/emblem.jpg\"\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport GroupIcon from '@material-ui/icons/Group';\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minHeight: 150,\r\n        minWidth: 170,\r\n        backgroundColor: '#3f51b5',\r\n        display: 'flex',\r\n        padding: 10,\r\n        color: 'white',\r\n    },\r\n    media: {\r\n        minHeight: 85,\r\n        minWidth: 120,\r\n        margin: 'auto',\r\n        padding: 'auto',\r\n        border: 'solid',\r\n        borderRadius: 10,\r\n        borderColor: 'white',\r\n        borderWidth: '1.7px'\r\n    },\r\n    linkTeam: {\r\n        textDecoration: \"none\",\r\n        marginRight: 30,\r\n        width: 10,\r\n        height: 10\r\n\r\n    },\r\n    linkCalendar: {\r\n        textDecoration: \"none\"\r\n    },\r\n    details: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: 170,\r\n    },\r\n    leagues: {\r\n        marginTop: 10\r\n    },\r\n    filterPanel: {\r\n        marginBottom: 15\r\n    },\r\n    icons: {\r\n        color: 'white',\r\n        marginRight: 0\r\n    }\r\n\r\n});\r\n\r\nconst LeaguesList = () => {\r\n    const classes = useStyles();\r\n    const [league, setLeague] = useState([])\r\n    const [filter, setFilter] = useState({year: 'all', leagueName: ''})\r\n    let history = useHistory()\r\n    const {search, pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n        responseLeague()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search);\r\n        if (filter.year !== 'all') {\r\n            params.set('year', filter.year)\r\n        } else {\r\n            params.delete('year')\r\n        }\r\n        if (filter.leagueName !== '') {\r\n            params.set('searchLeague', filter.leagueName)\r\n        } else {\r\n            params.delete('searchLeague')\r\n        }\r\n        history.push({\r\n            pathname,\r\n            search: params.toString()\r\n        })\r\n    }, [filter])\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search);\r\n        const yearPar = params.get('year');\r\n        const searchPar = params.get('searchLeague');\r\n        console.log(yearPar)\r\n        console.log(searchPar)\r\n        if (yearPar != null) {\r\n            setFilter({year: yearPar, leagueName: filter.leagueName})\r\n        }\r\n        if (searchPar != null) {\r\n            setFilter({year: filter.year, leagueName: searchPar})\r\n        }\r\n    }, [])\r\n    const responseLeague = () => {\r\n        fetch('https://api.football-data.org/v2/competitions/?plan=TIER_ONE', {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'X-Auth-Token': 'f1573e9bdcf24ba1b6acb53003336b7e',\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => setLeague(res.competitions))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    const leagueFilter = league.filter(league => {\r\n        return league.name.toLowerCase().includes(filter.leagueName.toLowerCase())\r\n    })\r\n\r\n    const yearFilter = leagueFilter.filter(league => {\r\n            let filteredLeague\r\n            if (filter.year === 'all') {\r\n                filteredLeague = league\r\n            } else if (league.currentSeason && league.currentSeason.startDate) {\r\n                filteredLeague = league.currentSeason.startDate.toString().includes(filter.year.toLowerCase())\r\n            }\r\n            return filteredLeague\r\n        }\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Container fixed>\r\n                <div className={classes.filterPanel}>\r\n                    <FormControl variant=\"outlined\">\r\n                        <Input\r\n                            placeholder='Search'\r\n                            onChange={(event => {\r\n                                    setFilter({year: filter.year, leagueName: event.target.value})\r\n                                }\r\n                            )}\r\n                        />\r\n                    </FormControl>\r\n                    <FormControl>\r\n                        <Select\r\n                            placeholder={'year'}\r\n                            value={filter.year}\r\n                            onChange={(event => {\r\n                                    setFilter({year: event.target.value, leagueName: filter.leagueName})\r\n                                }\r\n                            )}\r\n                        >\r\n                            <MenuItem value={'all'}>All years</MenuItem>\r\n                            <MenuItem value={'2021'}>2021</MenuItem>\r\n                            <MenuItem value={'2020'}>2020</MenuItem>\r\n                            <MenuItem value={'2019'}>2019</MenuItem>\r\n                            <MenuItem value={'2018'}>2018</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n                <Grid container spacing={7}>\r\n                    {yearFilter.map((i, index) =>\r\n                        <Grid item key={index} xs={12} sm={9} md={4}>\r\n                            <Card className={classes.root}>\r\n\r\n                                <div className={classes.details}>\r\n                                    <CardContent>\r\n                                    <span key={index}>\r\n                                    <Link to={{pathname: `/league/${i.id}/teams`, id: i.id}}\r\n                                          className={classes.linkTeam}>\r\n                                        <GroupIcon className={classes.icons}/></Link>\r\n                                    <Link to={{pathname: `/league/${i.id}/calendar`, id: i.id}}\r\n                                          className={classes.linkCalendar}>\r\n                                        <EventNoteIcon className={classes.icons}/></Link>\r\n                                    </span>\r\n                                        <Typography variant=\"subtitle1: 'h2'\" component=\"h3\">\r\n                                            {i.area.name}.\r\n                                        </Typography>\r\n                                        <Typography variant=\"body2: h1\" component=\"h4\" className={classes.leagues}>\r\n                                            {i.name}\r\n                                        </Typography>\r\n                                    </CardContent>\r\n                                </div>\r\n\r\n                                <CardMedia className={classes.media}\r\n                                           image={(i.area.ensignUrl) ? i.area.ensignUrl : emblem}\r\n                                           title='League' borderRadius=\"borderRadius\" border={1}/>\r\n                            </Card>\r\n                        </Grid>)}\r\n                </Grid>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default LeaguesList;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Link, useHistory, useLocation} from \"react-router-dom\";\r\nimport {\r\n    TableContainer,\r\n    Table,\r\n    TableBody,\r\n    TableHead,\r\n    TableRow,\r\n    TableCell, Button, FormControl\r\n} from \"@material-ui/core\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport {\r\n    MuiPickersUtilsProvider,\r\n    KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    tableTeams: {\r\n        maxWidth: 1200,\r\n        margin: 'auto'\r\n    },\r\n    select: {\r\n        width: 80\r\n    },\r\n    pickerContainer: {\r\n        display: 'flex',\r\n        padding: 0\r\n    },\r\n    backButton: {\r\n        borderRadius: 50,\r\n        marginLeft: 20,\r\n        marginTop: 10\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    pickerBlock: {\r\n        marginBottom: 10\r\n    },\r\n    tableHead: {\r\n        backgroundColor: '#3f51b5',\r\n\r\n    },\r\n    tableHeadText: {\r\n        color: 'white'\r\n    },\r\n});\r\n\r\nconst Calendar = ({data, tableHeader, type}) => {\r\n    const stateDate = (new Date().getFullYear() + 1).toString()\r\n    const valueTable = tableHeader\r\n    const classes = useStyles()\r\n    const [dataTable, setDataTable] = useState(data)\r\n    const [endDate, setEndDate] = useState(new Date(stateDate));\r\n    const [startDate, setStartDate] = useState(new Date('2015-01-01T00:00:00'))\r\n    const [season, setSeason] = useState('season')\r\n    let history = useHistory()\r\n    const {search, pathname} = useLocation()\r\n\r\n    useEffect(() => {\r\n        setDataTable(data)\r\n    }, [data])\r\n    const handleStartDateChange = (date) => {\r\n        setStartDate(date);\r\n    };\r\n    const handleEndDateChange = (date) => {\r\n        setEndDate(date);\r\n    };\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search);\r\n        ((season !== 'season') ? params.set('season', season) : params.delete('season'))\r\n        params.set('dateFrom',\r\n            `${startDate.getFullYear()}-${getParamDate(startDate, 'month')}-${getParamDate(startDate, 'day')}`)\r\n        params.set('dateTo',\r\n            `${endDate.getFullYear()}-${getParamDate(endDate, 'month')}-${getParamDate(endDate, 'day')}`)\r\n\r\n        history.push({\r\n            pathname,\r\n            search: params.toString()\r\n        })\r\n    }, [startDate, endDate, season])\r\n\r\n    useEffect(() => {\r\n        const params = new URLSearchParams(search);\r\n        const seasonPar = params.get('season');\r\n        if (seasonPar != null) {\r\n            setSeason(seasonPar)\r\n        }\r\n    }, [])\r\n    const getParamDate = (date, type) => {\r\n        let result\r\n        if (type === 'month') {\r\n            result = (date.getMonth() + 1 < 10 ? '0' : '') + (date.getMonth() + 1)\r\n        } else if (type === 'day') {\r\n            result = (date.getDate() < 10 ? '0' : '') + (date.getDate())\r\n        }\r\n        return result\r\n    }\r\n\r\n    const getDateMatch = (date) => {\r\n        let getDate = new Date(date)\r\n        let day = (getDate.getDate() < 10 ? '0' : '') + getDate.getDate()\r\n        let month = (getDate.getMonth() + 1 < 10 ? '0' : '') + (getDate.getMonth() + 1)\r\n        let hour = (getDate.getHours() < 10 ? '0' : '') + getDate.getHours()\r\n        let minutes = (getDate.getMinutes() < 10 ? '0' : '') + getDate.getMinutes()\r\n        let year = getDate.getFullYear()\r\n        return `${day}.${month}.${year} - ${hour}:${minutes}`\r\n    }\r\n\r\n    const renderMenuItem = () => {\r\n        let years = []\r\n        for (let i = endDate.getFullYear(); i >= startDate.getFullYear(); i--) {\r\n            years.push(i)\r\n        }\r\n        return years.map(i => <MenuItem value={i.toString()}>{i.toString()}</MenuItem>)\r\n    }\r\n\r\n    const filterDate = (startDate, endDate) => {\r\n        return dataTable.filter(item => startDate <= new Date(item.utcDate) &&\r\n            new Date(item.utcDate) <= endDate)\r\n    }\r\n\r\n    const filterYear = (startDate, endDate) => {\r\n        let seasonFormat = (season === 'season') ? '' : season\r\n        return filterDate(startDate, endDate).filter(item =>\r\n            new Date(item.utcDate).getFullYear().toString().includes(seasonFormat.toString()))\r\n    }\r\n    return (\r\n        <Container className={classes.pickerBlock}>\r\n            <Link to={`/`} className={classes.link}>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.backButton}>\r\n                    Back</Button>\r\n            </Link>\r\n            <Container className={classes.pickerContainer}>\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                    <Container>\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"Start date\"\r\n                            value={startDate}\r\n                            onChange={handleStartDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <KeyboardDatePicker\r\n                            disableToolbar\r\n                            variant=\"inline\"\r\n                            format=\"dd/MM/yyyy\"\r\n                            margin=\"normal\"\r\n                            id=\"date-picker-inline\"\r\n                            label=\"End date\"\r\n                            value={endDate}\r\n                            onChange={handleEndDateChange}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': 'change date',\r\n                            }}\r\n                        />\r\n                        <FormControl>\r\n                            <InputLabel id=\"demo-simple-select-readonly-label\">Season</InputLabel>\r\n                            <Select className={classes.select}\r\n                                    labelId=\"demo-simple-select-readonly-label\"\r\n                                    id=\"demo-simple-select-readonly\"\r\n                                    value={season}\r\n                                    onChange={(event => {\r\n                                            setSeason(event.target.value)\r\n                                        }\r\n                                    )}\r\n                            >\r\n                                <MenuItem value={'season'}>All</MenuItem>\r\n                                {renderMenuItem()}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Container>\r\n                </MuiPickersUtilsProvider>\r\n            </Container>\r\n            <TableContainer component={Paper} className={classes.tableTeams}>\r\n                {(type === 'league') ?\r\n                    <Table>\r\n                        <TableHead className={classes.tableHead}>\r\n                            <TableRow>\r\n                                <TableCell><Typography variant='h6' className={classes.tableHeadText}>Date</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6' className={classes.tableHeadText}>Teams</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6' className={classes.tableHeadText}>Score</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6'\r\n                                                       className={classes.tableHeadText}>Status</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {filterYear(startDate, endDate).map(i =>\r\n                                <TableRow>\r\n                                    <TableCell>{getDateMatch(i.utcDate)}</TableCell>\r\n                                    <TableCell>{i.homeTeam.name} - {i.awayTeam.name}</TableCell>\r\n                                    <TableCell>\r\n                                        <Typography variant=\"h7\" component=\"h2\">\r\n                                            {(i.score.fullTime.homeTeam !== null) ? i.score.fullTime.homeTeam : '-'}:\r\n                                            {(i.score.fullTime.awayTeam !== null) ? i.score.fullTime.awayTeam : '-'}\r\n                                        </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>{i.status.toLowerCase()}</TableCell>\r\n                                </TableRow>\r\n                            )\r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                    :\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell><Typography variant='h6' className={classes.tableHeadText}>Date</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6'\r\n                                                       className={classes.tableHeadText}>{valueTable}</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6' className={classes.tableHeadText}>Home -\r\n                                    Away</Typography></TableCell>\r\n                                <TableCell><Typography variant='h6'\r\n                                                       className={classes.tableHeadText}>Status</Typography></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {filterYear(startDate, endDate).map(i =>\r\n                                <TableRow>\r\n                                    <TableCell>{getDateMatch(i.utcDate)}</TableCell>\r\n                                    <TableCell>{i.competition.name}</TableCell>\r\n                                    <TableCell>\r\n                                        {i.homeTeam.name}\r\n                                        {(i.score.fullTime.homeTeam !== null) ? ' ' + i.score.fullTime.homeTeam : '-'}:{(i.score.fullTime.awayTeam !== null) ? i.score.fullTime.awayTeam + ' ' : '-'}\r\n                                        {i.awayTeam.name}\r\n                                    </TableCell>\r\n                                    <TableCell>{i.status}</TableCell>\r\n                                </TableRow>\r\n                            )}\r\n                        </TableBody>\r\n                    </Table>\r\n                }\r\n            </TableContainer>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Calendar;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport 'date-fns';\r\nimport Calendar from \"./Calendar\";\r\n\r\n\r\nconst LeaguesDate = () => {\r\n    const {number} = useParams()\r\n    const [matches, setMatches] = useState([])\r\n    const {search} = useLocation()\r\n\r\n    const responseMatches = () => {\r\n        fetch(`https://api.football-data.org/v2/competitions/${number}/matches`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'X-Auth-Token': process.env.REACT_APP_API_KEY,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => setMatches(res.matches))\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        responseMatches()\r\n    }, [search])\r\n\r\n    return (\r\n        <Container>\r\n          <Calendar data={matches} type={'league'}/>\r\n        </Container>\r\n    );\r\n}\r\nexport default LeaguesDate;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useLocation, useParams} from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport 'date-fns';\r\nimport Calendar from \"./Calendar\";\r\n\r\n\r\nconst TeamDate = () => {\r\n    const {teamId} = useParams()\r\n    const [teamMatches, setTeamMatches] = useState([])\r\n    const {search} = useLocation()\r\n\r\nconst responseTeams = () => {\r\n        fetch(`https://api.football-data.org/v2/teams/${teamId}/matches`, {\r\n            method: 'GET',\r\n            headers: new Headers({\r\n                'X-Auth-Token': process.env.REACT_APP_API_KEY,\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(res => setTeamMatches(res.matches))\r\n            .catch(err => console.log(err))\r\n    }\r\n    useEffect(() => {\r\n        responseTeams()\r\n    }, [search])\r\nconsole.log(teamMatches)\r\n\r\n    return (\r\n        <Container>\r\n            <Calendar data={teamMatches} tableHeader={'League'} type={'team'} />\r\n        </Container>\r\n    );\r\n}\r\nexport default TeamDate;\r\n","import './App.css';\nimport React from \"react\";\nimport TeamsList from \"./components/TeamsList\";\nimport LeaguesList from \"./components/LeaguesList\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport LeaguesDate from \"./components/LeaguesDate\";\nimport TeamDate from \"./components/TeamDate\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n\nfunction App() {\n\n    return (\n        <div>\n            <AppBar position=\"static\">\n        <Toolbar>\n            <Typography variant=\"h6\">\n                SoccerStat\n            </Typography>\n        </Toolbar>\n    </AppBar>\n        <div className='wrapper'>\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/soccer-stat\" component={LeaguesList} />\n                    <Route path='/soccer-stat/league/:number/teams' component={TeamsList}/>\n                    <Route path='/soccer-stat/league/:number/calendar' component={LeaguesDate}/>\n                    <Route path='/soccer-stat/league/team/:teamId/calendar' component={TeamDate}/>\n                </Switch>\n            </HashRouter>\n        </div>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}